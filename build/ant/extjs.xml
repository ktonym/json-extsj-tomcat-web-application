<?xml version="1.0" encoding="UTF-8"?>

<project name="extjs" default="extjs.fail">

	<description>extjs tasks</description>

	<target name="extjs.fail">
		<fail message="Do not execute this file directly.  Use build.xml from project root" />
	</target>

	<property name="extjs.workspace.dir" value="${basedir}/web/workspace/tec_json" />

	<property name="jshint.file" value="${basedir}/build/jshint/jshint-rhino.js" />
	<property name="jshint.flags" value="browser=true,maxerr=25,undef=true,curly=false,laxbreak=true,debug=true,eqeqeq=true,immed=true,onevar=true" />
	<property name="jshint.predef" value="Ext,tec_json,alert" />


	<!-- this is only to generate the base workspace. -->
	<!-- http://docs.sencha.com/cmd/4.0.0/#!/guide/command_workspace -->
	<!--
    <target name="extjs.gen.workspace" unless="already.workspace" description="generate the extjs workspace">
        <property name="already.workspace" value="true" />
        <delete dir="${basedir}\web" />
        <mkdir dir="${basedir}\web" />
        <exec spawn="N" dir="${basedir}\web" executable="${sencha.cmd.home}/sencha.exe">
            <arg value="-sdk" />
            <arg value="${extjs.home}" />
        	<arg value="generate" />
            <arg value="workspace" />
            <arg value="workspace" />
        </exec>
    </target>
	-->
	<!-- this is only to generate the skeleton application. -->
	<!-- http://docs.sencha.com/cmd/4.0.0/#!/guide/command_app_ext42 -->
	<!--
    <target name="extjs.gen.app" unless="already.app" description="generate the extjs skeleton app">
        <property name="already.app" value="true" />
        <exec spawn="N" dir="${basedir}\web\workspace" executable="${sencha.cmd.home}/sencha.exe">
            <arg value="-sdk" />
            <arg value="ext" />
        	<arg value="generate" />
            <arg value="app" />
            <arg value="tec_json" />
            <arg value="tec_json" />
        </exec>
    </target>
	-->

	<target name="extjs.build.dev" depends="extjs.lint" description="build the extjs application in test mode">
		<property name="extjs.build.root" value="${java.io.tmpdir}/webapp/extjs/target/testing/tec_json" />
		<!--
		<ant antfile="${extjs.workspace.dir}/build.xml" useNativeBasedir="true" target="build">
		    <property name="build.environment" value="testing" />
		</ant>
		-->
		<antcall target="extjs.build">
			<param name="target" value="testing" />
		</antcall>

	</target>

	<target name="extjs.build.prod" depends="extjs.lint" description="build the extjs production application">
		<property name="extjs.build.root" value="${java.io.tmpdir}/webapp/extjs/target/production/tec_json" />
		<!--
		<ant antfile="${extjs.workspace.dir}/build.xml" useNativeBasedir="true" target="build">
		    <property name="build.environment" value="production" />
		</ant>
		-->
		<antcall target="extjs.build">
			<param name="target" value="production" />
		</antcall>
	</target>

	<target name="extjs.props" depends="ivy.init" description="build the extjs production application">
		<ant antfile="${extjs.workspace.dir}/build.xml" useNativeBasedir="true" target=".props">
		</ant>
	</target>

	<!-- See http://docs.sencha.com/cmd/4.0.0/#!/guide/command_app_ext42 -->
	<!-- the build root is controlled via /webapp/web/workspace/tec_json/.sencha/app/build.properties -->
	<target name="extjs.build" unless="already.build">
		<property name="already.build" value="true" />
		<delete dir="${extjs.build.root}" />

		<if>
			<os family="windows" />
			<then>
				<exec executable="${sencha.cmd.home}/sencha.exe" dir="${basedir}\web\workspace\tec_json">
					<arg value="app" />
					<arg value="build" />
					<arg value="${target}" />
				</exec>
			</then>
			<else>
				<exec executable="${sencha.cmd.home}/sencha" dir="${basedir}\web\workspace\tec_json">
					<arg value="app" />
					<arg value="build" />
					<arg value="${target}" />
				</exec>
			</else>
		</if>
	</target>

	<!-- jshint validation, ootb jshint doesn't currently work but a custom is working -->
	<!-- @see http://mattsnider.com/running-jslint-with-your-ant-build/ -->
	<target name="extjs.lint" depends="ivy.init" description="Validate js files. add -Dextjs.lint.file=[filename] to validate a single file">

		<pathconvert property="extjs.jshint.classpath">
			<path refid="classpath.ant" />
		</pathconvert>

		<mkdir dir="${report.dir}/extjs" />

		<if>
			<isset property="extjs.lint.file" />
			<then>
				<echo>Validating ${extjs.lint.file}.js</echo>
				<property name="extjs.lint.include" value="${extjs.lint.file}" />
			</then>
			<else>
				<property name="extjs.lint.include" value="*" />
			</else>
		</if>

		<apply executable="java" verbose="true" parallel="true" maxparallel="50" skipemptyfilesets="true" resultproperty="extjs.lint.result">
			<arg value="-cp" />
			<arg path="${extjs.jshint.classpath}" />
			<arg value="org.mozilla.javascript.tools.shell.Main" />
			<arg path="${jshint.file}" />
			<srcfile />
			<arg value="${jshint.flags}" />
			<arg value="${jshint.predef},=" />
			<fileset dir="${basedir}/web/workspace/tec_json/app" includes="**/${extjs.lint.include}.js" />
			<redirector output="${report.dir}/extjs/err.txt" createemptyfiles="false" append="true" alwayslog="true" />
		</apply>

		<if>
			<resourceexists>
				<file file="${report.dir}/extjs/err.txt" />
			</resourceexists>
			<then>
				<fail message="JS Lint errors see ${report.dir}/extjs/err.txt for details" />
			</then>
		</if>
	</target>
</project>
