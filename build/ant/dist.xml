<?xml version="1.0" encoding="UTF-8"?>

<project name="dist" default="dist.fail" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle">

	<description>distribution tasks</description>

	<target name="dist.fail">
		<fail message="Do not execute this file directly.  Use build.xml from project root" />
	</target>

	<property name="jar.file.name" value="${app.name}.jar" />
	<property name="jar.file" value="${build.temp}/${jar.file.name}" />
	<property name="war.file.name" value="${app.name}.war" />
	<property name="war.file" value="${build.temp}/${war.file.name}" />
	<property name="war.temp" value="${build.temp}/war.tmp" />

	<target name="dist.jar" depends="compile.javac" unless="already.jar" description="build eEdtions jar">
		<property name="already.jar" value="true" />
		<jar destfile="${jar.file}">
			<manifest>
				<attribute name="Specification-Title" value="extjs json webapp skeleton" />
				<attribute name="Specification-Vendor" value="TEC enterprises" />
				<attribute name="Specification-Version" value="${version} ${build.number} ${time.stamp}" />
				<attribute name="Implementation-Title" value="extjs json webapp skeleton" />
				<attribute name="Implementation-Vendor" value="TEC enterprises" />
				<attribute name="Implementation-Version" value="${version} ${build.number} ${time.stamp}" />
			</manifest>
			<fileset dir="${build.temp}/classes" />
		</jar>
	</target>

	<target name="dist.war.init" unless="already.war" description="build eEdtions jar">
		<property name="already.dist.war.init" value="true" />
		<mkdir dir="${war.temp}/META-INF" />
		<mkdir dir="${war.temp}/WEB-INF/conf" />

		<copy file="${basedir}/conf/META-INF/context.xml.template"
              overwrite="true"
              force="true"
              tofile="${war.temp}/META-INF/context.xml">
            <filterchain>
                <replacetokens>
                    <token key="database.datasource" value="${database.datasource}" />
                    <token key="database.host" value="${database.host}" />
                    <token key="database.port" value="${database.port}" />
                    <token key="database.name" value="${database.name}" />
                    <token key="database.username" value="${database.username}" />
        			<token key="database.password" value="${database.password}" />
                </replacetokens>
            </filterchain>
		</copy>

        <if>
			<equals arg1="${dba.type}" arg2="hibernate"/>
            <then>
        		<copy file="${basedir}/conf/spring/hibernate/database-config.xml"
                      overwrite="true"
                      force="true"
                      toDir="${war.temp}/WEB-INF/conf"/>

            </then>
            <else>
        		<copy file="${basedir}/conf/spring/jdbc/database-config.xml"
                      overwrite="true"
                      force="true"
                      toDir="${war.temp}/WEB-INF/conf"/>
            </else>
        </if>
	</target>

	<target name="dist.war" depends="dist.jar,extjs.build.dev,dist.war.init" unless="already.war" description="build war">
		<property name="already.war" value="true" />

		<war destfile="${war.file}" webxml="${basedir}/conf/WEB-INF/web.xml">

			<fileset dir="${extjs.build.root}">
				<exclude name="WEB-INF/**/*" />
				<exclude name="META-INF/**/*" />
			</fileset>

			<lib dir="${build.temp}">
				<include name="${jar.file.name}" />
			</lib>

			<!-- see http://www.beilers.com/2010/06/ivy-dependency-management-lessons-learned-and-ant-1-8-mapped-resources/ -->
			<mappedresources>
				<restrict>
					<path refid="runtime.ivy"/>
					<type type="file"/>
				</restrict>
				<chainedmapper>
					<flattenmapper/>
					<firstmatchmapper>
						<globmapper from="*" to="WEB-INF/lib/*"/>
					</firstmatchmapper>
				</chainedmapper>
			</mappedresources>

			<classes dir="${basedir}/conf/WEB-INF/classes" />

			<webinf dir="${basedir}/conf/WEB-INF">
				<exclude name="web.xml" />
				<exclude name="classes/**/*" />
			</webinf>

			<fileset dir="${war.temp}">
				<exclude name="META-INF/**/*" />
			</fileset>

			<metainf dir="${war.temp}/META-INF" />
		</war>
	</target>

	<target name="dist.delete.log" depends="common.init" unless="already.delete" description="delete log files">
		<property name="already.delete" value="true" />
		<delete verbose="${delete.verbose}">
			<fileset dir="${tomcat.home}/logs">
				<include name="**/*.log" />
				<include name="**/*.txt" />
			</fileset>
		</delete>
	</target>

	<target name="dist.jar.deploy" depends="dist.jar, dist.delete.log" description="deploy ${jar.file} to webapp">
		<copy todir="${tomcat.home}/webapps/tec-json-webapp/WEB-INF/lib" file="${jar.file}" preservelastmodified="true" verbose="copy.verbose" />
	</target>

	<target name="dist.war.deploy" depends="dist.war, dist.delete.log" description="deploy war to tomcat">
		<delete dir="${tomcat.home}/webapps/tec-json-webapp"/>
		<delete file="${tomcat.home}/webapps/${war.file.name}"/>
		<delete dir="${tomcat.home}/webapps/tec-json-webapp" />
		<copy todir="${tomcat.home}/webapps" file="${war.file}" preservelastmodified="true" verbose="${copy.verbose}" />
	</target>

	<target name="dist.extjs.deploy" depends="common.init, extjs.build.dev" description="deploy supporting files to tomcat">
		<copy todir="${tomcat.home}/webapps/tec-json-webapp">
			<fileset dir="${extjs.build.root}">
				<exclude name="WEB-INF/**/*" />
				<exclude name="META-INF/**/*" />
			</fileset>
		</copy>
	</target>

</project>
